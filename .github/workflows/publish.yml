name: publish

on:
  workflow_dispatch:
  push:
    branches:
      - main
  release:
    types:
      - published

env:
  DOTNET_NOLOGO: true
  DOTNET_CLI_TELEMETRY_OPTOUT: true
  NUGET_DIRECTORY: ${{ github.workspace }}/Stleganographer.Console/nuget

defaults:
  run:
    shell: pwsh

jobs:
  create_nuget:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0
    - uses: actions/setup-dotnet@v4
    - run: dotnet pack --configuration Release
    - uses: actions/upload-artifact@v4
      with:
        path: ${{ env.NUGET_DIRECTORY }}/*.nupkg
        name: nuget-package
        if-no-files-found: error
        retention-days: 7

  validate_nuget:
    runs-on: ubuntu-latest
    needs: [ create_nuget ]
    steps:
      - uses: actions/setup-dotnet@v4
      - uses: actions/download-artifact@v4
        with:
          name: nuget-package
          path: ${{ env.NUGET_DIRECTORY }}
      - name: Install NuGet package validator
        run: dotnet tool update Meziantou.Framework.NuGetPackageValidation.Tool --global
      - name: Run NuGet package validator
        run: meziantou.validate-nuget-package (Get-ChildItem "${{ env.NUGET_DIRECTORY }}/*.nupkg")

  deploy:
    if: github.event_name == 'release'
    runs-on: ubuntu-latest
    needs: [ validate_nuget ]
    steps:
      - uses: actions/download-artifact@v4
        with:
          name: nuget
          path: ${{ env.NUGET_DIRECTORY }}
      - uses: actions/setup-dotnet@v4
      - name: Publish NuGet package
        run: |
          foreach($file in (Get-ChildItem "${{ env.NUGET_DIRECTORY }}" -Recurse -Include *.nupkg)) {
              dotnet nuget push $file --api-key "${{ secrets.NUGET_API_KEY }}" --source https://api.nuget.org/v3/index.json --skip-duplicate
          }
